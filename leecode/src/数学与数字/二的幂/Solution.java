package 数学与数字.二的幂;

/*
题目：给定一个整数，编写一个函数来判断它是否是 2 的幂次方
示例 1:

输入: 1
输出: true
解释: 2º = 1
示例 2:

输入: 16
输出: true
解释: 2^4 = 16
示例 3:

输入: 218
输出: false
思路：
解题思路：
若 n = 2^x，且 x 为自然数（即 n 为 2 的幂），则一定满足以下条件：
1）恒有 n & (n - 1) == 0，这是因为：
    n 二进制最高位为 1，其余所有位为 0；
    n−1 二进制最高位为 0，其余所有位为 1；
2）一定满足 n > 0。
因此，通过 n > 0 且 n & (n - 1) == 0 即可判定是否满足 n = 2^x

 */
public class Solution {
    public boolean isPowerOfTwo(int n) {
        return n > 0 && (n & (n - 1)) == 0;
    }
}
