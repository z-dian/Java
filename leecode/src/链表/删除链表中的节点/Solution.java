package 链表.删除链表中的节点;

import 数组与字符串.两数相加.ListNode;

/*
题目：
请编写一个函数，使其可以删除某个链表中给定的（非末尾）节点，你将只被给定要求被删除的节点。
现有一个链表 -- head = [4,5,1,9]，它可以表示为:
4->5->1->9
示例 1:

输入: head = [4,5,1,9], node = 5
输出: [4,1,9]
解释: 给定你链表中值为 5 的第二个节点，那么在调用了你的函数之后，该链表应变为 4 -> 1 -> 9.
示例 2:

输入: head = [4,5,1,9], node = 1
输出: [4,5,9]
解释: 给定你链表中值为 1 的第三个节点，那么在调用了你的函数之后，该链表应变为 4 -> 5 -> 9.
思路:一般思路是跳过node节点让node的上一个节点直接指向node的下一个节点
但是该题目没办法直接找到node的上一个节点
那么，让node后一个节点的值覆盖node节点的值，然后再删除node后一个节点就可以。
其实并不是实际意义上的删除，只是让其没有引用指向，被自动回收。
 */
public class Solution {
    public void deleteNode(ListNode node) {
        node.val=node.next.val;
        node.next=node.next.next;
    }
}
